model: pydgn.model.dgn.toy_dgn.ToyDGN
experiment: pydgn.experiment.supervised_task.SupervisedTask
higher_results_are_better: True
log_every: 1
dataset_getter: pydgn.data.provider.DataProvider
device: cpu
num_dataloader_workers: 0  # > 0 only with --debug option and GPU device
pin_memory: False  # True only with --debug option and GPU device
seed: 42
grid:
  supervised_config:
    checkpoint: True
    batch_size:
      - 32
      - 64
    epochs:
      - 5
    dim_embedding:
      - 4
    num_layers:
      - 5
    aggregation:
      - mean
    optimizer:
      - class_name: pydgn.training.callback.optimizer.Optimizer
        args:
          optimizer_class_name: torch.optim.Adam
          lr: 0.01
          weight_decay: 0.

    scheduler:
      - null
    loss:
      - pydgn.training.callback.loss.MulticlassClassificationLoss
    scorer:
      #- pydgn.training.callback.score.MulticlassAccuracyScore
      - class_name: pydgn.training.callback.score.MultiScore
        args:
          # used at model selection time. Should be the one on which to perform early stopping
          main_scorer: pydgn.training.callback.score.MulticlassAccuracyScore
          my_metric2: pydgn.training.callback.score.Toy1Score
    predictor:
      - pydgn.model.predictor.graph_predictor.LinearGraphPredictor
    wrapper:
      - pydgn.training.engine.TrainingEngine
    l2:
      - 0.
    gradient_clipping:
      - null
    dropout:
      - 0.
    early_stopper:
      - class_name:
          - pydgn.training.callback.early_stopping.PatienceEarlyStopper
        args:
          patience:
            - 3
          # Should be the name of the main_scorer in MultiScore
          monitor: validation_Multiclass Accuracy # (train_,validation_)[name_of_the_scorer_or_loss_to_monitor]
          mode: max
          checkpoint: True
    plotter:
      - pydgn.training.callback.plotter.Plotter
    shuffle:
      - True
