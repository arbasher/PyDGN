model: pydgn.model.dgn.toy_dgn_temporal.ToyDGNTemporal
experiment: pydgn.experiment.supervised_task.SupervisedTask
higher_results_are_better: False
log_every: 1
dataset_getter: pydgn.data.temporal_provider.MultipleGraphSequenceDataProvider
data_loader: torch.utils.data.DataLoader
device: cpu
num_dataloader_workers: 0  # > 0 only with --debug option and GPU device
pin_memory: False  # True only with --debug option and GPU device
seed: 42
grid:
  supervised_config:
    checkpoint: True
    batch_size:
      - 10
    epochs:
      - 100
    optimizer:
      - class_name: pydgn.training.callback.optimizer.Optimizer
        args:
          optimizer_class_name: torch.optim.Adam
          lr: 0.0001
          weight_decay: 0.
    scheduler:
      - null
    loss:
      - pydgn.training.callback.temporal_loss.MeanSquareErrorLoss
      # class_name: pydgn.training.callback.loss.AdditiveLoss
      # args:
      #   loss1: temporal_loss.MeanSquareErrorLoss
      #   loss2: temporal_loss.MeanAverageErrorLoss
    scorer:
      - pydgn.training.callback.temporal_score.MeanSquareErrorScore
    predictor:
      - pydgn.model.predictor.node_predictor.LinearNodePredictor
    wrapper:
      - class_name: pydgn.training.temporal_engine.GraphSequenceTrainingEngine
        args:
          engine_callback: pydgn.training.callback.temporal_engine_callback.TemporalEngineCallback
    gradient_clipping:
      - null
    early_stopper:
      - class_name:
          - pydgn.training.callback.early_stopping.PatienceEarlyStopper
        args:
          patience:
            - 500
          # Should be the name of the main_scorer in MultiScore
          monitor: validation_MSE Score # (train_,validation_)[name_of_the_scorer_or_loss_to_monitor]
          mode: min
          checkpoint: True
    plotter:
      - pydgn.training.callback.plotter.Plotter
