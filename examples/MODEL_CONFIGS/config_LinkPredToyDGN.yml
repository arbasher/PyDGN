exp_name: link_prediction_grid_search_toy
experiment: pydgn.experiment.supervised_task.SupervisedTask
higher_results_are_better: True
log_every: 1
dataset_getter: pydgn.data.provider.LinkPredictionSingleGraphDataProvider
data_loader:
  class_name: torch_geometric.loader.DataLoader
  args:
    num_workers : 0  # > 0 only with --debug option and GPU device
    pin_memory: False  # True only with --debug option and GPU device
device: cpu
seed: 42
grid:
  supervised_config:
    model: pydgn.model.dgn.toy_dgn.ToyDGN
    is_link_prediction: True
    checkpoint: True
    batch_size:
      - 32
      - 64
    epochs:
      - 10
    dim_embedding:
      - 4
    num_layers:
      - 5
    aggregation:
      - mean
    optimizer:
      - class_name: pydgn.training.callback.optimizer.Optimizer
        args:
          optimizer_class_name: torch.optim.Adam
          lr: 0.01
          weight_decay: 0.

    scheduler:
      - null
    loss:
      - pydgn.training.callback.metric.DotProductLink
    scorer:
      - pydgn.training.callback.metric.ToyMetric
    predictor:
      - pydgn.model.predictor.link_predictor.DotProductLinkPredictor
    wrapper:
      - pydgn.training.engine.LinkPredictionSingleGraphEngine
    l2:
      - 0.
    gradient_clipping:
      - null
    dropout:
      - 0.
    early_stopper:
      - class_name:
          - pydgn.training.callback.early_stopping.PatienceEarlyStopper
        args:
          patience:
            - 5
          monitor: validation_main_loss # (train_,validation_)[name_of_the_scorer_or_loss_to_monitor]
          mode: max
          checkpoint: True
    plotter:
      - pydgn.training.callback.plotter.Plotter
    shuffle:
      - True
